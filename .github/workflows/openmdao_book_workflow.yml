# Run linting check on Jupyter notebooks

name: OpenMDAO Book Workflow

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # Remove push when finally merging
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This job is called test_docs
  test_docs:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#          miniconda-version: "latest"
#          activate-environment: build_docs

      - name: 'Install dependencies'
        run: |
          pip install matplotlib
          pip install jupyter-book
          pip install nbconvert
          pip install testflo

      - name: 'Run testflo'
        run: |
          testflo .

  # This job is called build_docs
  build_docs:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    # Only run if test_docs was successful
    needs: [ test_docs ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#          miniconda-version: "latest"
#          activate-environment: build_docs

      - name: 'Download OpenMPI'
        run: wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
      - name: 'Extract OpenMPI'
        run: tar -xvf ./openmpi-4.0.2.tar.gz
      - name: 'Configure OpenMPI'
        run: ./openmpi-4.0.2/configure --prefix="/home/${USER}/.openmpi"
      - name: 'Install OpenMPI'
        run: |
          make -j
          sudo make install

      - name: 'Install dependencies'
        run: |
          pip install mpi4py
          pip install petsc petsc4py
          pip install matplotlib
          pip install jupyter-book
          pip install nbconvert
          pip install testflo
          # Test the installs
          python -c "import mpi4py"
          python -c "import petsc4py"

      - name: 'Build OpenMDAO Book'
        run: |
          python build_jupyter_book.py
          cd openmdao_book/_build/html
          zip -r ./openmdao_book.zip .

      - name: 'Upload Book'
        uses: actions/upload-artifact@v2
        with:
          name: openmdao_book_zip
          path: openmdao_book/_build/html/openmdao_book.zip
          retention-days: 2
