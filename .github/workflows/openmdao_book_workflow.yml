# Run linting check on Jupyter notebooks

name: OpenMDAO Book Workflow

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # Remove push when finally merging
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This job is called test_docs
  test_docs:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install OpenMDAO Stack
        run: |
          echo "=============================================================";
          echo "Run #${GITHUB_RUN_NUMBER}";
          echo "Run ID: ${GITHUB_RUN_ID}";
          echo "Testing: ${GITHUB_REPOSITORY}";
          echo "Triggered by: ${GITHUB_EVENT_NAME}";
          echo "Initiated by: ${GITHUB_ACTOR}";
          echo "=============================================================";

          echo "=============================================================";
          echo "Create conda environment";
          echo "=============================================================";
          source $CONDA/etc/profile.d/conda.sh;
          echo $CONDA/bin >> $GITHUB_PATH;
          conda create -n OpenMDAO python=3.8 numpy=1.18 scipy=1.4 -q -y;
          conda activate OpenMDAO;

          echo "=============================================================";
          echo "Install PETSc";
          echo "=============================================================";
          conda install -c anaconda mpi4py -q -y;
          conda install -c conda-forge petsc=3.12 petsc4py -q -y;

          echo "=============================================================";
          echo "Install pyoptsparse";
          echo "=============================================================";

          git clone -q https://github.com/OpenMDAO/build_pyoptsparse;

          cd build_pyoptsparse;
          chmod 755 ./build_pyoptsparse.sh;
          PAROPT=-a;
          cd ..;

          export LD_LIBRARY_PATH=$HOME/ipopt/lib;

          echo "=============================================================";
          echo "Install OpenMDAO";
          echo "=============================================================";
          git clone -q https://github.com/OpenMDAO/OpenMDAO;
          cd OpenMDAO;
          pip install .[all];
          cd ..;

          echo "=============================================================";
          echo "Install optional packages for testing/coverage";
          echo "=============================================================";
          pip install psutil objgraph git+https://github.com/mdolab/pyxdsm;
          pyppeteer-install;

          echo "=============================================================";
          echo "List installed packages/versions";
          echo "=============================================================";
          conda list;

      - name: Install notebook dependencies
        run: |
          pip install matplotlib
          pip install jupyter
          pip install nbconvert
          pip install testflo
          pip install ipyparallel

      - name: Additional setup for MPI under notebooks
          jupyter serverextension enable --py ipyparallel
          ipython profile create --parallel --profile=mpi
          ipcluster start -n 2 --profile=mpi
          tail ~/.ipython/profile_mpi/ipcluster_config.py

      - name: Run testflo
        run: |
          testflo

  # This job is called build_docs
  build_docs:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    # Only run if test_docs was successful
    needs: [ test_docs ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: 'Install dependencies'
        run: |
          pip install matplotlib
          pip install jupyter-book
          pip install nbconvert
          pip install testflo
          pip install ipyparallel

      - name: 'Build OpenMDAO Book'
        run: |
          ./build_all_docs.sh
          cd openmdao_book/_build/html
          zip -r ./openmdao_book.zip .

      - name: 'Upload Book'
        uses: actions/upload-artifact@v2
        with:
          name: openmdao_book
          path: openmdao_book/_build/html/openmdao_book.zip
          retention-days: 7
